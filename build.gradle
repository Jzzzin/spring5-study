ext {
    // 스프링 라이브러리
    springVersion = '5.1.8.RELEASE'
    bootVersion = '2.1.6.RELEASE'
    springDataVersion = '2.1.5.RELEASE'

    // 로그 라이브러리
    slf4jVersion = '1.7.25'
    logbackVersion = '1.2.3'

    groovyVersion = '2.4.5'
    guavaVersion = '21.0'

    aspectjVersion = '1.9.2'
    derbyVersion = '10.13.1.1'
    dbcpVersion = '2.1'
    mysqlVersion = '8.0.11' // mysql 버전 6.0.6 에서 수정해야 됨
    h2Version = '1.4.194'
    artemisVersion = '2.6.4'

    // 퍼시스턴스 라이브러리
    hibernateVersion = '5.3.9.Final'
    hibernateJpaVersion = '1.0.2.Final'
    hibernateValidatorVersion = '6.0.16.Final' //6.0.0.Beta2
    atomikosVersion = '4.0.4'

    // 테스트 라이브러리
    junitVersion = '4.12'

    spring = [
            context         : "org.springframework:spring-context:$springVersion",
            aspects           : "org.springframework:spring-aspects:$springVersion",
            tx                : "org.springframework:spring-tx:$springVersion",
            jdbc              : "org.springframework:spring-jdbc:$springVersion",
            contextSupport    : "org.springframework:spring-context-support:$springVersion",
            orm               : "org.springframework:spring-orm:$springVersion",
            data              : "org.springframework.data:spring-data-jpa:$springDataVersion",
            test            : "org.springframework:spring-test:$springVersion"
    ]

    hibernate = [
            validator  : "org.hibernate:hibernate-validator:$hibernateValidatorVersion",
            jpaModelGen: "org.hibernate:hibernate-jpamodelgen:$hibernateVersion",
            ehcache    : "org.hibernate:hibernate-ehcache:$hibernateVersion",
            em         : "org.hibernate:hibernate-entitymanager:$hibernateVersion",
            envers     : "org.hibernate:hibernate-envers:$hibernateVersion",
            jpaApi     : "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$hibernateJpaVersion",
            querydslapt: "com.mysema.querydsl:querydsl-apt:2.7.1",
            tx         : "com.atomikos:transactions-hibernate4:$atomikosVersion"
    ]

    boot = [
            springBootPlugin: "org.springframework.boot:spring-boot-gradle-plugin:$bootVersion",
            starter         : "org.springframework.boot:spring-boot-starter:$bootVersion",
            starterWeb      : "org.springframework.boot:spring-boot-starter-web:$bootVersion",
            actuator        : "org.springframework.boot:spring-boot-starter-actuator:$bootVersion",
            starterTest     : "org.springframework.boot:spring-boot-starter-test:$bootVersion",
            starterAop      : "org.springframework.boot:spring-boot-starter-aop:$bootVersion",
            starterJdbc     : "org.springframework.boot:spring-boot-starter-jdbc:$bootVersion",
            starterJpa      : "org.springframework.boot:spring-boot-starter-data-jpa:$bootVersion",
            starterJta      : "org.springframework.boot:spring-boot-starter-jta-atomikos:$bootVersion",
            starterJms      : "org.springframework.boot:spring-boot-starter-artemis:$bootVersion"
    ]

    testing = [
            junit           : "junit:junit:$junitVersion"
    ]

    misc = [
            slf4jJcl       : "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            logback        : "ch.qos.logback:logback-classic:$logbackVersion",
            groovy         : "org.codehaus.groovy:groovy-all:$groovyVersion",
            inject         : "javax.inject:javax.inject:1",
            aspectjweaver  : "org.aspectj:aspectjweaver:$aspectjVersion",
            aspectjrt      : "org.aspectj:aspectjrt:$aspectjVersion",
            lang3          : "org.apache.commons:commons-lang3:3.5",
            guava          : "com.google.guava:guava:$guavaVersion",
            artemis        : "org.apache.activemq:artemis-jms-server:$artemisVersion"
    ]

    db = [
            mysql : "mysql:mysql-connector-java:$mysqlVersion",
            derby : "org.apache.derby:derby:$derbyVersion",
            dbcp2 : "org.apache.commons:commons-dbcp2:$dbcpVersion",
            h2    : "com.h2database:h2:$h2Version"
    ]
}

subprojects {
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
